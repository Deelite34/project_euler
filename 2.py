import unittest



class Fibonacci(unittest.TestCase):
    """
    Each new term in the Fibonacci sequence is generated by adding the previous
    two terms.
    By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values
    do not exceed four million, find the sum of the even-valued terms.
    """
    fib_list = []  # create fib list for all methods to use

    def calculate_fib(self, number):  # create list consisting of fibonacci sequence number
        self.fib_list = []  # ensure fib_list is clear before proceeding
        for i in range(1, number + 1):
            output_calculations = self.calculations(i)
            if output_calculations is not False:  # check if found fib number is < 4000000
                self.fib_list.append(output_calculations)
            else:  # found an number in fib sequence > 4000000, aborting
                break
        return(self.fib_list)

    def calculations(self, number):  # Use recursive method to calculate specific fib number
        if number == 0:
            return(1)
        elif number < 2:
            return(1)
        else:
            recursive_sum =  self.calculations(number - 1) + self.calculations(number - 2)
            if recursive_sum < 4000000:
                return(recursive_sum)
            else:
                # False lets parent function(calculate_fib) know to not continue the loop
                return(False)

    def sum_of_evens(self, number):  # calculates sum of even-valued terms
        calculated_fib = self.calculate_fib(number)
        result = [i for i in calculated_fib if i % 2 == 0]
        return(sum(result))

    def test_calculate_fib(self):
        real_result = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
        self.assertEqual(self.calculate_fib(10), real_result)

    def test_sum_of_evens(self):
        real_result = 44
        self.assertEqual(self.sum_of_evens(8), real_result)


if __name__ == '__main__':
    unittest.main(exit=False)
    task = Fibonacci()
    # any high number other than 99 will do, program stops when it detects fib sequence number > 4000000
    print(task.sum_of_evens(99))
